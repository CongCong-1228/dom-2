{"version":3,"sources":["jquery.js"],"names":["window","jQuery","selectorOrArrayOrTemplate","elements","create","document","querySelectorAll","Array","string","element","createElement","innerHTML","trim","content","firstChild","jquery","remove","each","node","parentNode","removeChild","empty","console","log","x","childNodes","length","text","arguments","innerText","html","attr","name","value","getAttribute","setAttribute","css","style","Object","key","appendTo","querySelector","appendChild","addClass","className","classList","add","find","selector","array","i","array2","from","concat","oldApi","parent","indexOf","push","children","siblings","index","next","nextSibling","prev","previousSibling","on","eventName","fn","addEventListener","off","removeEventListener","call","print","end","$"],"mappings":"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","file":"jquery.53e715ff.map","sourceRoot":"..\\src","sourcesContent":["window.jQuery = function (selectorOrArrayOrTemplate) {\r\n    let elements\r\n    if (typeof selectorOrArrayOrTemplate === 'string') {\r\n        if (selectorOrArrayOrTemplate[0] === '<') {\r\n            elements = [create(selectorOrArrayOrTemplate)]\r\n            //创建div\r\n        } else {\r\n            elements = document.querySelectorAll(selectorOrArrayOrTemplate)\r\n            //查找div\r\n        }\r\n    } else if (selectorOrArrayOrTemplate instanceof Array) {\r\n        elements = selectorOrArrayOrTemplate\r\n    }\r\n    // 三种情况，如果是传入html文本，就创建这个节点，如果是传入选择器，就查询对应的节点赋值给elements，如果是节点数组，直接赋值给elements。\r\n    // elements是定义在函数外部的变量，函数内部使用，叫做闭包\r\n    // elements也表示下面函数调用时作用的那个对象this，都是在对elements进行操作\r\n    function create(string) {\r\n        let element = document.createElement('template')\r\n        element.innerHTML = string.trim()\r\n        return element.content.firstChild\r\n    }\r\n    return {\r\n        //创建新的节点\r\n        jquery: true,\r\n        elements: elements,\r\n        remove() {\r\n            this.each(\r\n                (node) => {\r\n                    node.parentNode.removeChild(node)\r\n                }\r\n            )\r\n            return this\r\n        },\r\n        //删除当前节点,页面中删除，内存中还在，还可以进行其他操作。\r\n        empty() {\r\n            this.each((node) => {\r\n                console.log(node)\r\n                x = node.childNodes[0]\r\n                while (node.childNodes.length !== 0) {\r\n                    node.removeChild(x)\r\n                    x = node.childNodes[0]\r\n                }\r\n            })\r\n            return this\r\n        },\r\n        // 删除当前节点的所有后代，因为每次删除一个，节点的长度会变，所以不能使用for循环，采用while循环。\r\n        text(string) {\r\n            if (arguments.length === 0) {\r\n                this.each((node) => {\r\n                    console.log(node.innerText)\r\n                })\r\n            } else {\r\n                this.each((node) => {\r\n                    node.innerText += string\r\n                })\r\n            }\r\n            return this\r\n        },\r\n        // 为当前节点添加文本，如果有参数就添加，没有参数就读取\r\n        html(string) {\r\n            if (arguments.length === 0) {\r\n                this.each((node) => {\r\n                    console.log(node.innerHTML)\r\n                })\r\n            } else {\r\n                this.each((node) => {\r\n                    node.innerHTML += string\r\n                })\r\n            }\r\n            return this\r\n        },\r\n        // 为当前节点添加html文本，如果有参数就添加，没有参数就读取\r\n        attr(name, value) {\r\n            if (arguments.length === 1) {\r\n                this.each((node) => {\r\n                    console.log(node.getAttribute(name))\r\n                })\r\n            } else if (arguments.length === 2) {\r\n                this.each((node) => {\r\n                    node.setAttribute(name, value)\r\n                })\r\n            }\r\n            return this\r\n        },\r\n        // 当前节点添加属性值，一个参数就读取，两个参数就更改或者设置\r\n        css(name, value) {\r\n            if (arguments.length === 2) {\r\n                this.each((node) => {\r\n                    console.log(node)\r\n                    node.style[name] = value\r\n                })\r\n            } else if (arguments.length === 1) {\r\n                this.each((node) => {\r\n                    if (name instanceof Object) {\r\n                        for (key in name) {\r\n                            node.style[key] = name[key]\r\n                        }\r\n                    }\r\n                    if (typeof name === 'string') {\r\n                        console.log(node.style[name])\r\n                    }\r\n                })\r\n            }\r\n            return this\r\n        },\r\n        // 当前节点添加css样式，通过传递参数个数来进行读写操作，如果为两个参数，就添加样式，如果一个参数为对象，添加样式，如果一个参数为字符串，读样式\r\n        appendTo(node) {\r\n            let element = document.querySelector(node)\r\n            this.each((node) => {\r\n                element.appendChild(node)\r\n            })\r\n            return this\r\n        },\r\n        //将当前节点添加到一个节点中\r\n        addClass(className) {\r\n            this.each((node) => node.classList.add(className))\r\n            return this\r\n        },\r\n        //为当前节点添加类名\r\n        find(selector) {\r\n            let array = []\r\n            for (let i = 0; i < elements.length; i++) {\r\n                let array2 = Array.from(elements[i].querySelectorAll(selector))\r\n                array = array.concat(array2)\r\n            }\r\n            array.oldApi = this\r\n            return jQuery(array)\r\n        },\r\n        //在当前节点内查找指定的节点\r\n\r\n        parent() {\r\n            const array = []\r\n            this.each((node) => {\r\n                if (array.indexOf(node.parentNode) === -1) {\r\n                    array.push(node.parentNode)\r\n                }\r\n            })\r\n\r\n            return jQuery(array)\r\n        },\r\n        //查找当前节点的父亲\r\n        children() {\r\n            const array = []\r\n            this.each((node) => {\r\n                array.push(...node.children)\r\n            })\r\n\r\n            return jQuery(array)\r\n        },\r\n        //查找当前节点的孩子\r\n        siblings() {\r\n            let array = []\r\n            this.each((node) => {\r\n                let children = node.parentNode.children\r\n                for (let i = 0; i < children.length; i++) {\r\n                    if (children[i] !== node) {\r\n                        array.push(children[i])\r\n                    }\r\n                }\r\n            })\r\n\r\n            return jQuery(array)\r\n        },\r\n        //查找当前节点的兄弟节点\r\n        index() {\r\n            const array = []\r\n            this.each((node) => {\r\n                let children = node.parentNode.children\r\n                for (let i = 0; i < children.length; i++) {\r\n                    if (children[i] === node) {\r\n                        array.push(i)\r\n                    }\r\n                }\r\n            })\r\n\r\n            return array\r\n        },\r\n        //查找当前节点在其父亲节点中是第几个\r\n        next() {\r\n            const array = []\r\n            this.each((node) => {\r\n                array.push(node.nextSibling)\r\n            })\r\n\r\n            return jQuery(array)\r\n\r\n        },\r\n        //当前节点的下一个兄弟节点\r\n        prev() {\r\n            const array = []\r\n            this.each((node) => {\r\n                array.push(node.previousSibling)\r\n            })\r\n\r\n            return jQuery(array)\r\n        },\r\n        //当前节点的上一个兄弟节点\r\n        on(eventName, fn) {\r\n            this.each((node) => {\r\n                node.addEventListener(eventName, fn)\r\n            })\r\n        },\r\n        //添加事件处理\r\n        off(eventName, fn) {\r\n            this.each((node) => {\r\n                node.removeEventListener(eventName, fn)\r\n            })\r\n        },\r\n        // 移除事件处理\r\n        each(fn) {\r\n            console.log(elements)\r\n            for (let i = 0; i < elements.length; i++) {\r\n                fn.call(null, elements[i], i)\r\n            }\r\n            return this\r\n        },\r\n        // 遍历当前elements，闭包参数，就是我们操作的对象节点，\r\n        // 因为你传入的选择器可能对应多个节点，因此在每次操作时，都看成数组操作，这里先封装遍历的方法。\r\n        print() {\r\n            console.log(elements)\r\n        },\r\n        // 打印出当前节点\r\n        oldApi: selectorOrArrayOrTemplate.oldApi,\r\n        end() {\r\n            return this.oldApi\r\n        },\r\n        // 返回上一个节点\r\n\r\n    }\r\n}\r\n//jQuery接受传递的选择器，返回一个对象（jQuery创造的对象），这个对象可以操作对应的元素。\r\n//jQuery的闭包+链式风格\r\n\r\nwindow.$ = window.jQuery\r\n\r\n\r\n"]}